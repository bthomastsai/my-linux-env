# $Id: vim-keys.conf,v 1.2 2010/09/18 09:36:15 nicm Exp $
#
# vim-keys.conf, v1.2 2010/09/12
#
# By Daniel Thau.  Public domain.
#
# This configuration file binds many vi- and vim-like bindings to the
# appropriate tmux key bindings.  Note that for many key bindings there is no
# tmux analogue.  This is intended for tmux 1.3, which handles pane selection
# differently from the previous versions

unbind-key C-b
set-option -g prefix C-q
bind C-q send-prefix

set-option -g history-limit 32768

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 10 
bind > resize-pane -R 10
bind - resize-pane -D 10
bind + resize-pane -U 10 

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# vi-style controls for copy mode
set-option -g status-keys vi
setw -g mode-keys vi
#set -g default-terminal "screen-256color"
set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"
set -g display-time 3000

# Set status bar
set -g status-bg black
set -g status-fg white
set -g status-left '#[fg=green][#[bg=black,fg=cyan]#S#[bg=black,fg=blue,dim]:#H#[fg=green]]'
set -g status-right '#[fg=green][#[fg=white]#T#[fg=green]][#[fg=blue]%Y-%m-%d #[fg=white]%H:%M#[default]#[fg=green]]'
# Highlight active window
# set-window-option -g window-status-current-bg red
# set-window-option -g window-status-current-fg white
set-window-option -g window-status-format '#[fg=cyan,dim]#I#[fg=blue]:#[default]#W#[fg=grey,dim]#F'
set-window-option -g window-status-current-format '#[bg=blue,fg=cyan,bold]#I#[bg=blue,fg=cyan]:#[fg=white]#W#[fg=dim]#F'

bind-key R respawn-window

bind-key S capture-pane -b temp-capture-buffer -S - \; save-buffer -b temp-capture-buffer ~/tmux.log \; delete-buffer -b capture-buffer

# create a session with a throw-away window
 new true
#
# # for future windows, stay open after the command exits
#set set-remain-on-exit on
#
# # create the windows we really want
neww -n vim 
splitw -v -p 20 -t 0 
#
# # for future windows, revert r-o-e to global value
#set -u set-remain-on-exit

#splitw -v -p 85 -t 0 ls
#selectw -t 1 
#selectp -t 0

set -g @logging-path "/ch1-home/thomas/tmux_logging/"
run-shell /ch1-home/thomas/opensource/tmux-logging/logging.tmux

